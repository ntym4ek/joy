<?php

/**
 * Implements hook_menu()
 */
function mailing_menu()
{
    $items['admin/config/administration/mailing'] = array(
        'title' => 'Рассылка писем',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('mailing_manual_form'),
        'access arguments' => array('access manager settings'),
    );

    return $items;
}

/**
 * Implements hook_cron().
 */
function mailing_cron()
{
    if (strpos($_SERVER['HTTP_HOST'], '.local') === false) {
        // добавляем задания для рассылки уведомлений о брошенных Корзинах
        mailing_queue_cart_orphan_mails();
        // добавляем задания для рассылки уведомлений на Отзыв о товарах
        mailing_queue_order_review_mails();
        // добавляем задания для рассылки уведомлений на Отзыв о сервисе
        mailing_queue_shop_review_mails();
    }
}

/**
 * Implements hook_cron_queue_info().
 */
function mailing_cron_queue_info() {
    $queues['cart_orphan_mails_queue'] = array(
        'worker callback' => 'mailing_send_cart_orphan_mails',
    );
    $queues['order_review_mails_queue'] = array(
        'worker callback' => 'mailing_send_order_review_mails',
    );
    $queues['shop_review_mails_queue'] = array(
        'worker callback' => 'mailing_send_shop_review_mails',
    );
    $queues['manual_mails_queue'] = array(
        'worker callback' => 'mailing_send_manual_mails',
    );
    $queues['order_complete_mails_queue'] = array(
        'worker callback' => 'mailing_send_order_complete_mails',
    );

    return $queues;
}

/**
 * form callback.
 */
function mailing_manual_form($form, $form_state)
{
    $form['filter'] = array(
        '#type' => 'checkboxes',
        '#title' => 'Фильтр получателей',
        '#options' => [
            1 => 'Без заказов',
            2 => 'С заказами',
            3 => 'Только зарегистрированным за последние 2 недели',
        ],
        '#default_value' => empty($form_state['values']['filter']) ? [1 => 1, 2 => 2, 3 => 3] : $form_state['values']['filter'],
    );

    $form['subject'] = array(
        '#type' => 'textfield',
        '#title' => 'Тема письма',
        '#required' => TRUE,
        '#default_value' => empty($form_state['values']['subject']) ? '' : $form_state['values']['subject'],
    );

    $form['body'] = array(
        '#type' => 'text_format',
        '#title' => 'Тело письма',
        '#description' => 'Письмо может содержать в тексте HTML разметку со встроенными стилями',
        '#required' => TRUE,
        '#default_value' => empty($form_state['values']['body']['value']) ? '' : $form_state['values']['body']['value'],
    );

    $form['actions'] = [
        '#type' => 'container'
    ];
    $form['actions']['test'] = [
        '#type' => 'submit',
        '#value' => 'Сначала тест!',
        '#description' => 'Отправить письмо на Электропочту магазина',
        '#validate' => ['mailing_manual_form_validate'],
        '#submit' => ['mailing_manual_form_test_submit'],
    ];
    $form['actions']['spam'] = [
        '#type' => 'submit',
        '#value' => 'Начать спамить',
        '#description' => 'Отправить письма заданному контингенту',
        '#validate' => ['mailing_manual_form_filter_validate', 'mailing_manual_form_validate'],
        '#submit' => ['mailing_manual_form_spam_submit'],
    ];

    return $form;
}

/**
 * form validate callback.
 */
function mailing_manual_form_filter_validate($form, $form_state)
{
    if (!$form_state['input']['filter'][1] && !$form_state['input']['filter'][2]) {
        form_set_error('filter', 'Выберите одну или несколько категорий получателей.' );
    }
}

/**
 * form validate callback.
 */
function mailing_manual_form_validate($form, $form_state)
{
    if (empty($form_state['input']['subject'])) {
        form_set_error('subject', 'Тема письма обязательна к заполнению.' );
    }
    if (empty($form_state['input']['body'])) {
        form_set_error('body', 'Текст письма обязателен к заполнению.' );
    }
}

/**
 * form submit callback.
 */
function mailing_manual_form_test_submit($form, &$form_state)
{
    $params['subject'] = $form_state['values']['subject'];
    $params['body'] = $form_state['values']['body']['value'];

    // письмо Пользователю
    drupal_mail('mailing', 'manual_mail', variable_get('support_email', 'help@joy-magazin.ru'), 'RU', $params);
//    drupal_mail('mailing', 'manual_mail', 'mega_comp@mail.ru', 'RU', $params);

    // оставляем значения в форме
    $form_state['rebuild'] = true;
}

/**
 * form submit callback.
 */
function mailing_manual_form_spam_submit($form, &$form_state)
{
    // определение пула получателей
    $query = db_select('commerce_order', 'co');
    $query->condition('co.mail', '', '<>');
    $query->condition('co.status', ['paid', 'pending','processing', 'completed'], 'IN');
    $query->fields('co', ['mail']);
    $query->distinct();
    $mails_orders = $query->execute()->fetchCol();

    $mails_users = [];
    if ($form_state['values']['filter'][1]) {
        $query = db_select('users', 'u');
        $query->condition('u.status', 1);
        if ($form_state['values']['filter'][3]) {
            // только для пользователей не старше 2 недель
            $query->condition('u.created', REQUEST_TIME - 1210100, '>');
        }
        $query->fields('u', ['mail']);
        $mails_users = $query->execute()->fetchCol();
    }

    $mails = $mails_orders;
    if ($form_state['values']['filter'][1] && $form_state['values']['filter'][2]) $mails = array_unique(array_merge($mails_users, $mails_orders));
    if ($form_state['values']['filter'][1] && !$form_state['values']['filter'][2]) $mails = array_diff($mails_users, $mails_orders);

    // добавление в очередь отправки
    if ($mails) {
        $params['subject'] = $form_state['values']['subject'];
        $params['body'] = $form_state['values']['body']['value'];

        $queue = DrupalQueue::get('manual_mails_queue');
        foreach($mails as $mail) {
            $params['mail'] = $mail;

            if (in_array($mail, $mails_users)) {
                $params['account'] = user_load_by_mail($mail);
            }
            $queue->createItem($params);
        }
    }

    drupal_set_message('Письма поставлены в очередь и будут отправлены в ближайшее время');
}

function mailing_send_manual_mails($params)
{
    $will_get_email = true;

    // проверить на наличие подписки на рекламную рассылку
    if (!empty($params['account'])) {
        $flag = flag_get_flag('email_marketing');
        if ($flag && !$flag->is_flagged($params['account']->uid, $params['account']->uid)) {
            $will_get_email = false;
        }
    }

    if ($will_get_email) {
        drupal_mail('mailing', 'manual_mail', $params['mail'], 'ru', $params);
        //    drupal_mail('mailing', 'manual_mail', 'mega_comp@mail.ru', 'ru', $params);
    }
}

/**
 * Implements hook_helper_commerce_order_presave
 */
function mailing_commerce_order_presave($order)
{

    if (empty($order->original)) return;

    // перенести из Rules отправку писем на оформление заказа и смену статуса
    // варианты писем
    // 1. оформление заказа Анонимом
    // 2. оформление заказа Зарегистрированным
    // 3. смена статуса заказа
    //      - простое информирование о смене статуса
    //      - информация об отправке

    // определить событие
    $event = '';
    $params = [];
    $mail_to_manager = false;
    if (strpos($order->original->status, 'checkout_') === 0 && $order->status == 'pending') {
        $event = 'order_creation';
        $mail_to_manager = true;
    }
    if ($order->original->status != 'paid' && $order->status == 'paid') {
        $event = 'order_paid';
        $mail_to_manager = true;
    }
    if ($order->original->status != 'completed' && $order->status == 'completed') {

        $order_wr = entity_metadata_wrapper('commerce_order', $order);
        if ($order_wr->commerce_line_items->count()) {
            $td = 'border-bottom: 1px solid #ccc; border-right: 1px solid #ccc; padding: 4px 8px;';

            $table = array(
                'header' => array(
                    array('data' => 'Наименование', 'style' => $td . 'min-width: 350px; text-align:center;'),
                    array('data' => 'Упак.',        'style' => $td . 'width: 70px; text-align:center;'),
                    array('data' => 'Цена',         'style' => $td . 'width: 100px; text-align:center;'),
                    array('data' => 'Кол-во',       'style' => $td . 'width: 60px; text-align:center;'),
                    array('data' => 'Сумма',        'style' => $td . 'width: 150px; text-align:center;'),
                ),
            );
            foreach ($order_wr->commerce_line_items as $item_wr) {
                if ($item_wr->type->value() == 'product') {
                    $tare = $item_wr->commerce_product->field_p_tare->value() ? $item_wr->commerce_product->field_p_tare->name->value() : '';
                    $table['rows'][] = array(
                        array('data' => $item_wr->commerce_product->title->value(), 'style' => $td),
                        array('data' => $tare, 'style' => $td . ' text-align: center;'),
                        array('data' => commerce_currency_format($item_wr->commerce_unit_price->amount->value(), 'RUB', NULL, true), 'style' => $td . ' text-align: right;'),
                        array('data' => (int)$item_wr->quantity->value(), 'style' => $td . ' text-align: center;'),
                        array('data' => commerce_currency_format($item_wr->commerce_total->amount->value(), 'RUB', NULL, true), 'style' => $td . ' text-align: right;'),
                    );
                } elseif ($item_wr->type->value() == 'shipping') {
                    $table['rows'][] = array(
                        array('data' => $item_wr->line_item_label->value(), 'colspan' => 4, 'style' => $td . ' text-align: right;'),
                        array('data' => commerce_currency_format($item_wr->commerce_total->amount->value(), 'RUB', NULL, true) , 'style' => $td . ' text-align: right;'),
                    );
                }
            }
            // добавить в таблицу вес, объём, сумму
            $weight = commerce_physical_order_weight($order, 'kg');

            $table['rows'][] = array(
                array('data' => t('Weight') . ': ' . $weight['weight'] . ' ' . t($weight['unit']), 'colspan' => 4, 'style' => $td),
                array('data' => commerce_currency_format($order_wr->commerce_order_total->amount->value(), 'RUB', NULL, true) , 'style' => $td . ' text-align: right;'),
            );
            $params['table'] = $table;
        }

        $event = 'order_sent';
    }
    if ($order->original->status == 'pending' && $order->status == 'processing') {
        $event = 'order_changed';
    }

    if ($event) {
        $account = user_load($order->uid);
        $params['account'] = $account;
        $params['order_info'] = _get_order_info($order);

        // письмо Пользователю
//        drupal_mail('mailing', $event, 'mega_comp@mail.ru', user_preferred_language($account), $params);
        if (!empty($order->mail)) {
            drupal_mail('mailing', $event, $order->mail, user_preferred_language($account), $params);
        }

        // смс пользователю
        ext_user_sms_gate_sms($event, $params);

        // письмо Менеджеру
        if ($mail_to_manager) {
            $params['mail_to_manager'] = $mail_to_manager;
            $manager_mail = variable_get('support_email', 'help@joy-magazin.ru');
            if (strpos($_SERVER['HTTP_HOST'], '.local') !== false) $manager_mail = 'mega_comp@mail.ru';
            drupal_mail('mailing', $event, $manager_mail, user_preferred_language($account), $params);

            // письмо Смирнову
            if ($event == 'order_creation' && $order->mail != 'support@kccc.ru' && $manager_mail != 'mega_comp@mail.ru') {
                drupal_mail('mailing', $event, 'ed_smr@kccc.ru', user_preferred_language($account), $params);
            }
        }

    }
}

/**
 * Implements hook_mail
 */
function mailing_mail($key, &$message, $params)
{
    $order_info = empty($params['order_info']) ? [] : $params['order_info'];
    $data = empty($params['data']) ? [] : $params['data'];

    switch($key) {
        case 'leave_feedback':
            $message['subject'] = 'Отзыв на выходе';

            $message['body'][] = '' .
                '<h2>И снова здравствуйте!</h2>' .
                '<p>Пользователь заполнил форму при покидании сайта:</p>' .
                '<strong>Текст:</strong> ' . $data['text'] . '<br />' .
                '<strong>Имя:</strong> ' . $data['name'] . '<br />' .
                '<strong>Нужен ответ:</strong> ' .  ($data['checkbox'] == 'false' ? 'нет' : 'да') . '<br />' .
                '<strong>Email:</strong> ' . ($data['email'] ? $data['email'] : 'нет') . '<br />' .
                '';

            break;

        case 'order_creation':
            if (empty($params['mail_to_manager'])) {
                $message['subject'] = 'Подтверждение заказа';

                // при предоплате
                if ($order_info['payment']['before_shipping']) {
                    $message['body'][] = '' .
                        '<h2>Здравствуйте, ' . $order_info['user']['name'] . '!</h2>' .
                        '<p>Спасибо за заказ в нашем магазине JOY.</p>' .
                        '<p>Номер Вашего заказа ' . $order_info['id'] . '.<br />' .
                        'Заказ будет обработан и выслан после поступления средств на счет.</p>' .
                        // для Зарегистрированного вставить ссылку на заказ, для Анонима - на оплату
                        ($order_info['user']['uid']
                            ? '<p>Просмотреть статус заказа, если Вы уже произвели оплату или оплатить заказ вы можете перейдя по <a href="' . $order_info['url'] . '">ссылке</a>.</p>'
                            : '<p>Если Вы уже оплатили заказ, ожидайте уведомления о смене статуса заказа. Если нет, то оплатить можно перейдя по <a href="/checkout/' . $order_info['id'] . '/pay">ссылке</a></p>')  .
                        '';
                }
                // при постоплате
                else {
                    // для самовывоза текст другой

                    $message['body'][] = '' .
                        '<h2>Здравствуйте, ' . $order_info['user']['name'] . '!</h2>' .
                        '<p>Спасибо за заказ в нашем магазине JOY.</p>' .
                        '<p>Номер Вашего заказа ' . $order_info['id'] . '.<br />' .
                        ($order_info['shipping']['method'] == 'pickup_shipping_service'
                            ? 'После проверки менеджером заказ будет упакован и готов к выдаче в пункте самовывоза по адресу: Кирово-Чепецк, ул. Производственная, д.6.'
                            : 'После проверки менеджером заказ будет упакован и отправлен службой "' . $order_info['shipping']['title'] . '".') . '</p>' .
                        '<p>Вы выбрали оплату при получении заказа.<br />' .
                        'Сумма к оплате ' . $order_info['total_formatted'] . '.</p>' .
                        '';
                }
            } else {
                $order_url_manager = 'http://joy-magazin.ru/admin/commerce/orders/' . $order_info['id'];

                $message['subject'] = 'Новый заказ №' . $order_info['id'];
                $message['body'][] = '' .
                    '<h2>И снова здравствуйте!</h2>' .
                    '<p>В нашем магазине JOY новый <a href="' . $order_url_manager . '">заказ</a> с номером ' . $order_info['id'] . '.</p>';
            }

            break;

        case 'order_paid':
            if (empty($params['mail_to_manager'])) {
                $message['subject'] = 'Заказ оплачен';

                $message['body'][] = '' .
                    '<h2>Здравствуйте, ' . $order_info['user']['name'] . '!</h2>' .
                    '<p>По Вашему заказу ' . $order_info['id'] . ' поступила оплата на сумму ' . $order_info['payment']['paid_formatted'] . '.</p>' .
                    '<p>В ближайшее время ваш заказ будет упакован и отправлен службой "' . $order_info['shipping']['title'] . '".<br />' .
                    'Ожидайте уведомления с трек номером для отслеживания.</p>' .
                    '<p>Подробную информацию Вы можете посмотреть на странице заказа, перейдя по <a href="' . $order_info['url'] . '">ссылке</a>.</p>' .
                    '';
            } else {
                $order_url_manager = 'http://joy-magazin.ru/admin/commerce/orders/' . $order_info['id'];

                $message['subject'] = 'Заказ №' . $order_info['id'] . ' оплачен';
                $message['body'][] = '' .
                    '<h2>И снова здравствуйте!</h2>' .
                    '<p>В нашем магазине JOY оплатили <a href="' . $order_url_manager . '">заказ</a> с номером ' . $order_info['id'] . '.</p>';
            }

            break;

        case 'order_sent':
            $message['subject'] = 'Заказ отправлен';
            $message['body'][] = '' .
                '<h2>Здравствуйте, ' . $order_info['user']['name'] . '!</h2>' .
                '<p>Еще раз спасибо за покупку в нашем интернет-магазине JOY!</p>' .
                '<p>Рады сообщить, что Ваш заказ ' . $order_info['id'] . ' от ' . date('d.m.Y', $order_info['placed']) . ' был отправлен.</p>' .
                ($order_info['shipping']['parcel_number'] ? '<p>Трек-номер для отслеживания ' . $order_info['shipping']['parcel_number'] . '.</p>' : '').
                '<p>Содержимое отправления:</p>' .
                (empty($params['table']) ? 'Товары не найдены'
                                         :  theme('table', array(
                                                'header' => $params['table']['header'],
                                                'rows' => $params['table']['rows'],
                                                'attributes' => array('cellspacing' => 0, 'style' => 'font-size: .9em; border-top: 1px solid #ccc; border-left: 1px solid #ccc; margin: 0 auto;'),
                ))) .
                '<h3 style="color: red;">Обратите внимание!</h3>' .
                '<p>К данному сообщению приложена фотография полностью упакованной посылки.</p>' .
                '<p>По получению посылки, пожалуйста, сравните ее с фотографией. При обнаружении повреждения упаковки, вскройте упаковку и  проверьте сохранность товаров. Если товар поврежден,  не принимайте посылку и не расписывайтесь в ее получении.<br />' .
                'Подайте заявление в адрес руководства подразделения службы доставки. Сделайте фотографии посылки, так чтобы было видно повреждение, и перешлите их нам. Мы, со своей стороны, подадим заявление о нарушении сохранности упаковки посылки.</p>' .
                '<div style="width: 100%; text-align: center;"><img width="400" style="display: inline-block;" src="' . $order_info['shipping']['parcel_photo_url'] . '"/></div>' .
                '<h3 style="color: red;">Важно!</h3>' .
                '<p>Регулярно отслеживайте движение посылки и получите её сразу по прибытию в Ваш населённый пункт. Не ждите уведомления от служб доставки.<br />' .
                'Если посылка не будет получена в течение двух недель, то она будет отправлена обратно. Избегайте лишних хлопот и расходов как с Вашей, так и с нашей стороны.</p>' .
                '<br />';
            break;

        case 'order_changed':
            $message['subject'] = 'Статус заказа изменился';
            $message['body'][] = '' .
                '<h2>Здравствуйте, ' . $order_info['user']['name'] . '!</h2>' .
                '<p>Ваш заказ №' . $order_info['id'] . ' принят в обработку.</p>' .
                '';

            break;

        case 'cart_orphan':
            $message['subject'] = 'Вы что-то забыли в корзине!';
            $message['body'][] = '' .
                '<h2>Здравствуйте!</h2>' .
                '<p>Совсем недавно в магазине Joy Вы положили товары в корзину, но так и не оформили заказ.<br />' .
                'Мы сохранили их для Вас.</p>' .
                '<p>В любое время Вы сможете продолжить покупки или завершить оформление заказа.<br />' .
//                (variable_get('free_shipping_sum', 0) ? 'А при покупке от ' . variable_get('free_shipping_sum') . ' рублей мы доставим ваш заказ бесплатно.' : '') . '</p>' .
                '<p>Если у Вас возникли какие-то вопросы при оформлении заказа или нужна консультация по товару, позвоните по бесплатному номеру 8-800-550-28-85 и мы обязательно поможем.</p>' .
                '<br />' .
                '<div style="text-align: center;"><a href="' . $GLOBALS['base_root'] . '" style="display: inline-block; background: #0a6526; border-radius: 4px; color: #fff; padding: 8px 15px; text-decoration: none; ">Продолжить покупки</a></div>';

            break;

        case 'leave_review':
            $message['subject'] = 'Поделитесь Вашими впечатлениями о товаре!';
            $message['body'][] = '' .
                '<h2>Здравствуйте!</h2>' .
                '<p>Благодарим Вас за покупку в магазине Joy!</p>' .
                '<p>Пожалуйста, оцените приобретенные товары или оставьте свой отзыв на нашем сайте.</p>' .
                '<p>Ваш отзыв поможет нашим покупателям в дальнейшем сделать правильный выбор.</p>' .
                (empty($params['table']) ? 'Товары не найдены'
                                        : theme('table', array(
                                            'header' => $params['table']['header'],
                                            'rows' => $params['table']['rows'],
                                            'attributes' => array('cellspacing' => 0, 'style' => 'font-size: .9em; border-top: 1px solid #ccc; border-left: 1px solid #ccc; margin: 0 auto;'),
                ))) .
                '<br />';


            break;

        case 'leave_shop_review':
            $message['subject'] = 'Всё ли Вам понравилось?';
            $message['body'][] = '' .
                '<h2>Здравствуйте!</h2>' .
                '<p>Благодарим Вас за покупку в магазине Joy!</p>' .
                '<p>Мы постоянно работаем над улучшением сервиса и Вы можете помочь нам стать лучше!</p>' .
                '<p>Ответьте на несколько вопросов о работе магазина.</p>' .
                '<div style="text-align: center;">' .
                    '<a href="https://yandex.ru/poll/enter/CSHFzwCNd6Tze1TBUbX9sz" style="display: inline-block; background: #0a6526; border-radius: 4px; color: #fff; padding: 8px 15px; text-decoration: none; ">Пройти опрос</a>' .
                '</div>';


            break;

        case 'manual_mail':
            $message['subject'] = $params['subject'];

            $body = $params['body'];

            // заменить инфо о картинке на <img src>
            $match = [];
            if (preg_match('!(.*)\[\[(.+)\]\](.*)!s', $params['body'], $match) && !empty($match[2])) {
                $image_url = '';
                if (preg_match('!\{"fid":"(\d+)"!', $match[2], $match2)) {
                    if ($file = file_load($match2[1])) {
                        $image_url = file_create_url($file->uri);
                    }
                }
                if ($image_url) $body = $match[1] . '<img src="' . $image_url . '" style="max-width: 100%;">' . $match[3];
                else $body = $match[1] . 'Ошибка при загрузке изображения' . $match[3];
            }

            $message['body'][] = '' .
                '<h2>Здравствуйте!</h2>' . $body;
            break;
    }
}

/**
 * отправка писем с уведомлением об оформленном заказе
 */
function mailing_queue_order_complete_mails($data)
{
    $queue = DrupalQueue::get('order_complete_mails_queue');
    $queue->createItem($data);
}

function mailing_send_order_complete_mails($data)
{
    $order = $data['order'];
    $account = user_load($order->uid);
    $params = $data['params'];
    $params['account'] = $account;
    $params['order_info'] = _get_order_info($order);

    // письмо Пользователю
    //        drupal_mail('mailing', $event, 'mega_comp@mail.ru', user_preferred_language($account), $params);
    drupal_mail('mailing', $data['event'], $order->mail, user_preferred_language($account), $params);

    // письмо Менеджеру
    if ($data['mail_to_manager']) {
        $params['mail_to_manager'] = $data['mail_to_manager'];
        $manager_mail = variable_get('support_email', 'help@joy-magazin.ru');
        if (strpos($_SERVER['HTTP_HOST'], '.local') !== false) $manager_mail = 'mega_comp@mail.ru';
        drupal_mail('mailing', $data['event'], $manager_mail, user_preferred_language($account), $params);

        // письмо Смирнову
        if ($data['event'] == 'order_creation' && $order->mail != 'support@kccc.ru' && $manager_mail != 'mega_comp@mail.ru') {
            drupal_mail('mailing', $data['event'], 'ed_smr@kccc.ru', user_preferred_language($account), $params);
        }
    }
}

/**
 * отправка письма с уведомлением о брошенной Корзине
 * 00000001 - флаг отправленного уведомления
 * время жизни > 24 часов, без изменения > 8 часов
 */
function mailing_queue_cart_orphan_mails()
{
    // найти брошенные корзины ()
    $query = db_select('commerce_order', 'co');
    $query->condition('co.created', REQUEST_TIME - 86400, '<');
    $query->condition('co.changed', REQUEST_TIME - 28800, '<');
    $query->condition('co.mail', '', '<>');
    $query->condition('co.status', ['cart', 'checkout_checkout', 'checkout_payment' ], 'IN');
    $query->leftJoin('field_data_field_flags', 'ff', 'ff.entity_id = co.order_id');
    $query->fields('co', ['order_id']);
    $query->fields('ff', ['field_flags_value']);
    if ($results = $query->execute()->fetchAll()) {
        // формируем очередь из операций уведомления
        $queue = DrupalQueue::get('cart_orphan_mails_queue');
        foreach($results as $item) {
            // проверяем все на наличие неуведомлённых корзин
            if ((!$item->field_flags_value || !($item->field_flags_value & bindec('00000001')))) {
                $queue->createItem($item->order_id);

                // установить флаг
                $order_wr = entity_metadata_wrapper('commerce_order', $item->order_id);
                $flags = $order_wr->field_flags->value();
                $order_wr->field_flags = $flags | bindec('00000001');
                $order_wr->save();
            }
        }
    }
}

function mailing_send_cart_orphan_mails($order_id)
{
    $order_wr = entity_metadata_wrapper('commerce_order', $order_id);

    // отправить уведомление
    $account = user_load($order_wr->uid->value());

    // проверить на наличие подписки на рекламную рассылку
    $flag = flag_get_flag('email_marketing');
    if ($flag && $flag->is_flagged($GLOBALS['user']->uid, $GLOBALS['user']->uid)) {
        $params['account'] = $account;
        $params['order_info'] = _get_order_info($order_wr->value());
        //                    drupal_mail('mailing', 'cart_orphan', 'mega_comp@mail.ru', user_preferred_language($account), $params);
        drupal_mail('mailing', 'cart_orphan', $order_wr->mail->value(), user_preferred_language($account), $params);
    }
}


/**
 * отправка письма с просьбой оставить Отзыв для отправленных заказов
 * 00000010 - флаг отправленного уведомления
 * время с момента отправки > 2 недель
 */
function mailing_queue_order_review_mails()
{
    $query = db_select('commerce_order', 'co');
    $query->condition('co.changed', REQUEST_TIME - 1209600, '<');
    $query->condition('co.mail', '', '<>');
    $query->condition('co.status', 'completed');
    $query->leftJoin('field_data_field_flags', 'ff', 'ff.entity_id = co.order_id');
    $query->fields('co', ['order_id']);
    $query->fields('ff', ['field_flags_value']);
    if ($results = $query->execute()->fetchAll()) {
        // формируем очередь из операций уведомления
        $queue = DrupalQueue::get('order_review_mails_queue');
        foreach($results as $item) {
            // проверяем все на наличие неуведомлённых заказов
            if ((!$item->field_flags_value || !($item->field_flags_value & bindec('00000010')))) {
                $queue->createItem($item->order_id);
//                watchdog('mailing_order', 'Постановка в очередь. Заказ ' . $item->order_id, [], WATCHDOG_DEBUG);

                // установить флаг
                $order_wr = entity_metadata_wrapper('commerce_order', $item->order_id);
                $flags = $order_wr->field_flags->value();
                $order_wr->field_flags = $flags | bindec('00000010');
                $order_wr->save();
            }
        }
    }
}

function mailing_send_order_review_mails($order_id)
{
    $order_wr = entity_metadata_wrapper('commerce_order', $order_id);

    // таблица со списком препаратов
    $td = 'border-bottom: 1px solid #ccc; border-right: 1px solid #ccc; padding: 4px 8px;';
    $table = 'Товары не найдены.';
    if ($order_wr->commerce_line_items->count()) {
        $table = array(
            'header' => array(
                array('data' => 'Наименование', 'style' => $td . 'min-width: 350px; text-align: center;'),
                array('data' => 'Ссылка',       'style' => $td . 'width: 150px; text-align: center;'),
            ),
        );
        foreach ($order_wr->commerce_line_items as $item_wrapper) {
            if ($item_wrapper->type->value() == 'product') {
                $pid = $item_wrapper->commerce_product->product_id->value();
                $title = $item_wrapper->commerce_product->title->value();
                $nid = _get_product_display_by_product_id($pid);
                $table['rows'][] = [
                    ['data' => $title, 'style' => $td],
                    ['data' => '<a href="' . url('node/' . $nid, ['absolute' => true, 'fragment' => 'scroll-to-block-views-product-reviews-block']) . '">поставить оценку</a>', 'style' => $td . 'text-align:center;'],
                ];
            }
        }
    }
    $params['table'] = $table;

    // отправить уведомление
    $account = user_load($order_wr->uid->value());

    // проверить на наличие подписки на рекламную рассылку
    $flag = flag_get_flag('email_marketing');
    if ($flag && $flag->is_flagged($GLOBALS['user']->uid, $GLOBALS['user']->uid)) {

        $params['account'] = $account;
        $params['order_info'] = _get_order_info($order_wr->value());
        // drupal_mail('mailing', 'leave_review', 'mega_comp@mail.ru', user_preferred_language($account), $params);
        drupal_mail('mailing', 'leave_review', $order_wr->mail->value(), user_preferred_language($account), $params);

        // watchdog('mailing_order', 'Отправка. Заказ ' . $order_id, [], WATCHDOG_DEBUG);
    }
}


/**
 * отправка письма с просьбой оставить Отзыв для отправленных заказов
 * 00000100 - флаг отправленного уведомления
 * время с момента отправки > 2 недель и 2х дней
 */
function mailing_queue_shop_review_mails()
{
    $query = db_select('commerce_order', 'co');
    $query->condition('co.changed', REQUEST_TIME - 1382400, '<');
    $query->condition('co.mail', '', '<>');
    $query->condition('co.status', 'completed');
    $query->leftJoin('field_data_field_flags', 'ff', 'ff.entity_id = co.order_id');
    $query->fields('co', ['order_id']);
    $query->fields('ff', ['field_flags_value']);
    if ($results = $query->execute()->fetchAll()) {
        // формируем очередь из операций уведомления
        $queue = DrupalQueue::get('shop_review_mails_queue');
        foreach($results as $index => $item) {
            // проверяем все на наличие неуведомлённых заказов
            if ((!$item->field_flags_value || !($item->field_flags_value & bindec('00000100')))) {
                $queue->createItem($item->order_id);
//                watchdog('mailing_shop', 'Постановка в очередь. Заказ ' . $item->order_id, [], WATCHDOG_DEBUG);

                // после поставновки сразу меняем флаг
                $order_wr = entity_metadata_wrapper('commerce_order', $item->order_id);
                $flags = $order_wr->field_flags->value();
                $order_wr->field_flags = $flags | bindec('00000100');
                $order_wr->save();
            }
        }
    }
}

function mailing_send_shop_review_mails($order_id)
{
    $order_wr = entity_metadata_wrapper('commerce_order', $order_id);

    // отправить уведомление
    $account = user_load($order_wr->uid->value());

    // проверить на наличие подписки на рекламную рассылку
    $flag = flag_get_flag('email_marketing');
    if ($flag && $flag->is_flagged($GLOBALS['user']->uid, $GLOBALS['user']->uid)) {

        $params['account'] = $account;
        $params['order_info'] = _get_order_info($order_wr->value());
        // drupal_mail('mailing', 'leave_shop_review', 'mega_comp@mail.ru', user_preferred_language($account), $params);
        drupal_mail('mailing', 'leave_shop_review', $order_wr->mail->value(), user_preferred_language($account), $params);

        // проблема с отправкой множества писем одному пользователю
        // watchdog('mailing_shop', 'Отправка. Заказ ' . $order_id, [], WATCHDOG_DEBUG);
    }
}