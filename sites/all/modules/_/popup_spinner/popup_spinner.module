<?php
/**
 * @file
 * Main module file.
 */

define('POPUP_SPINNER_VISIBILITY_NOTLISTED', 0);
define('POPUP_SPINNER_VISIBILITY_LISTED', 1);
define('POPUP_SPINNER_VISIBILITY_PHP', 2);



/**
 * Implements hook_menu().
 */
function popup_spinner_menu()
{
    $items = array();

    // Settings form.
    $items['admin/config/joy/popup_spinner'] = array(
        'title' => t('Popup Spinner'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('popup_spinner_settings'),
        'file' => 'popup_spinner.admin.inc',
        'access callback' => true,
    );

    // получение сообщения и отправка письма
    $items['services/popup-spinner'] = array(
        'page callback' => 'popup_spinner_ajax_callback',
        'access callback' => true,
        'type' => MENU_CALLBACK,
        'delivery callback' => 'ajax_deliver',
    );

    return $items;
}

/**
 * Implements hook_init().
 */
function popup_spinner_init()
{
    global $user;

    // включен/выключен для анонимов или всегда вкл для менеджеров
    $status = variable_get('popup_spinner_enable', 1) && $user->uid == 0 || _user_has_role('products manager');
    // Get popup message visibility settings.
    $visibility = variable_get('popup_spinner_visibility', POPUP_SPINNER_VISIBILITY_NOTLISTED);
    // Get popup message visibility pages settings.
    $visibility_pages = variable_get('popup_spinner_visibility_pages', '');
    // Predefine value.
    $page_match = TRUE;

    // Limited visibility popup message must list at least one page.
    if ($visibility == POPUP_SPINNER_VISIBILITY_LISTED && empty($visibility_pages)) {
        $status = FALSE;
    }

    // Match path if necessary.
    if ($visibility_pages && $status) {
        // Convert path to lowercase. This allows comparison of the same path
        // with different case. Ex: /Page, /page, /PAGE.
        $pages = drupal_strtolower($visibility_pages);
        if ($visibility < POPUP_SPINNER_VISIBILITY_PHP) {
            // Convert the Drupal path to lowercase.
            $path = drupal_strtolower(drupal_get_path_alias($_GET['q']));
            // Compare the lowercase internal and lowercase path alias (if any).
            $page_match = drupal_match_path($path, $pages);
            if ($path != $_GET['q']) {
                $page_match = $page_match || drupal_match_path($_GET['q'], $pages);
            }
            // When $visibility has a value of 0 (POPUP_SPINNER_VISIBILITY_NOTLISTED),
            // the popup message is displayed on all pages except those listed in
            // $visibility_pages.
            // When set to 1 (POPUP_SPINNER_VISIBILITY_LISTED), it is displayed only
            // on those pages listed in $visibility_pages.
            $page_match = !($visibility xor $page_match);
        }
        elseif (module_exists('php')) {
            $page_match = php_eval($visibility_pages);
        }
        else {
            $page_match = FALSE;
        }
    }

    if ($status && $page_match) {
        $popup_spinner_parameters = array(
            'base_url' => $GLOBALS['base_url'],
            'uid' => $GLOBALS['user']->uid,
            'check_cookie' => variable_get('popup_spinner_check_cookie', 1),
            'width' => variable_get('popup_spinner_width', 300),
            'height' => variable_get('popup_spinner_height', 300),
            'delay' => variable_get('popup_spinner_delay', 0),
        );
        popup_spinner_show_message($popup_spinner_parameters);
    }
}

/**
 * Show popup message.
 *
 * @param array $popup_spinner_parameters
 *   Array of parameters:
 *   - title: message title
 *   - body: message body
 *   - check_cookie: set FALSE if you dont want to check cookie.
 *   - width: window width
 *   - height: window height
 */
function popup_spinner_show_message($popup_spinner_parameters)
{
    drupal_add_js(array(
        'popup_spinner' => $popup_spinner_parameters,
    ), 'setting');
    drupal_add_js('misc/jquery.cookie.js');
    drupal_add_js(drupal_get_path('module', 'popup_spinner') . '/js/popup_spinner.js');
    drupal_add_css(drupal_get_path('module', 'popup_spinner') . '/css/popup_spinner.css');
    drupal_add_js(drupal_get_path('theme', 'strada') . '/js/jquery.maskedinput.min.js');
}

function popup_spinner_ajax_callback()
{
  global $user;
  $result = array('#type' => 'ajax');

  $name = empty($_POST['data']['name']) ? '' : trim($_POST['data']['name']);
  $phone = empty($_POST['data']['phone']) ? '' : ext_user_normalize_phone($_POST['data']['phone']);

  // проверить корректность введенных имени и телефона
  $error_id = false; $error_text = '';
  if (!$name) {
    $error_id = 'name'; $error_text = 'Укажите своё имя';
  }
  elseif (!$phone) {
    $error_id = 'phone'; $error_text = 'Укажите свой номер телефона';
  }
  elseif (!ext_user_valid_phone($phone)) {
    $error_id = 'phone'; $error_text = 'Укажите корректный номер телефона';
  }
  elseif (ext_user_user_load_by_login($phone)) {
    $error_id = 'phone'; $error_text = 'Акция доступна только для новых пользователей';
  }

  if ($error_id) {
    // отправить сообщение об ошибке
    $result['#commands'][] = [
      'command' => 'ajax_command_error',
      'error' => ['id' => $error_id, 'text' => $error_text],
    ];
  } else {
    // зарегистрировать
    $pass = user_password(6);
    $arguments = array(
      'name' => $phone,
      'pass' => $pass, // генерация пароля
      'mail' => 'not@required.more',
      'init' => $phone,
      'status' => 1,
      'roles' => array(DRUPAL_AUTHENTICATED_RID => TRUE),
    );
    $arguments['field_name_first'][LANGUAGE_NONE][0]['value'] = $name;
    $arguments['field_phone'][LANGUAGE_NONE][0]['value'] = $phone;

    // создание пользователя
    user_save(NULL, $arguments);
    // аутентификация пользователя
    $uid = ext_user_user_authenticate($phone, $arguments['pass']);
    $user = user_load($uid);
    user_login_finalize();
    // нужно для rpt - Registration Password Token, в противном случае токен будет пустой
    $user->password = $arguments['pass'];
    // отправить СМС с паролем
    ext_user_sms_gate_sms('user_pass', ['phone' => $phone, 'pass' => $pass]);

    // todo вычислить и начислить подарок
    // вероятности
    $rand = rand(1, 100);
    if      ($rand <= 15) $gift_id = 1;
    elseif  ($rand <= 45  && $rand > 15) $gift_id = 2;
    elseif  ($rand <= 60  && $rand > 45) $gift_id = 3;
    elseif  ($rand <= 85  && $rand > 60) $gift_id = 4;
    elseif  ($rand <= 90  && $rand > 85) $gift_id = 5;
    elseif  ($rand <= 100 && $rand > 90) $gift_id = 6;

    $gift_id = 1;
    $error = '';
    switch ($gift_id) {
      case '1':
        $gift_text_1 = 'Вы выиграли подарок к следующему заказу';
        $gift_text_2 = 'Добавьте любой товар в корзину и подарок добавится автоматически.';
        $gift_name = 'SEDA "Biohumus"';
        $gift_type = 'gift';
        $gift_code = 'BIOHUMUS';
        break;
      case '2':
        $gift_text_1 = 'Вы выиграли бонусные баллы';
        $gift_text_2 = 'Вы можете использовать баллы при оформлении заказа. 1 балл = 1 рубль.';
        $gift_name = '100 баллов';

        // Create the userpoints transaction.
        $userpoints_params = [
          'txn_id' => NULL,
          'points' => 100,
          'uid' => $uid,
          'operation' => 'new_user_gift',
          'tid' => variable_get('commerce_userpoints_discount_custom_default_termid', userpoints_get_default_tid()),
          'display' => FALSE,
          'status' => USERPOINTS_TXN_STATUS_APPROVED,
        ];
        $result = userpoints_userpointsapi($userpoints_params);

        break;
      case '3':
        $gift_text_1 = 'Вы выиграли купон на скидку 15%';
        $gift_text_2 = 'Запишите код и примените при оформлении заказа.';
        $gift_name = variable_get('popup_spinner_coupon_15', '');
        break;
      case '4':
        $gift_text_1 = 'Вы выиграли подарок к следующему заказу';
        $gift_text_2 = 'Добавьте любой товар в корзину и подарок добавится автоматически.';
        $gift_name = 'JOY "Клеща нет"';
        $gift_type = 'gift';
        $gift_code = 'ACARID';
        break;
      case '5':
        $gift_text_1 = 'Вы выиграли купон на бесплатную доставку';
        $gift_text_2 = 'Запишите код и примените при оформлении заказа.';
        $gift_name = variable_get('popup_spinner_coupon_free_shipping', '');
        break;
      case '6':
        $gift_text_1 = 'Вы выиграли купон на скидку 30%';
        $gift_text_2 = 'Запишите код и примените при оформлении заказа.';
        $gift_name = variable_get('popup_spinner_coupon_30', '');
        break;
    }
    if ($gift_type == 'gift') {
      $order = commerce_cart_order_load($uid);
      if (empty($order)) {
        $order = commerce_cart_order_new($uid);
        $order->data['last_cart_refresh'] = REQUEST_TIME;
        commerce_order_save($order);
      }
      commerce_coupon_redeem_coupon_code($gift_code, $order, $error);
    }
    $gift = [
      'id' => $gift_id,
      'output' =>   '<div class="thanx">
                            <h2>Поздравляем!</h2>
                            <div class="field field-promo"><p>' . $gift_text_1 . '</p></div>
                            <div class="field field-gift"><span>' . $gift_name . '</span></div>
                            <div class="field field-promo"><p>' . $gift_text_2 . '</p></div>
                         </div>'];


    // отправить подарок и закрутить рулетку
    $result['#commands'][] = [
      'command' => 'ajax_command_spin',
      'gift' => $gift,
    ];

    // todo отправить письмо с небольшой задержкой, так как подарок уже определён, а пользователь всё ещё крутит колесо
    $params['data'] = [
      'name' => empty($_POST['data']['name']) ? '' : $_POST['data']['name'],
      'phone' => empty($_POST['data']['phone']) ? '' : $_POST['data']['phone'],
      'gift' => $gift,
    ];
    $mail = 'mega_comp@mail.ru';
//  $mail = variable_get('support_email', 'mega_comp@mail.ru');
//  drupal_mail('popup_spinner', '', $mail, 'ru', $params);
  }

  return $result;
}

/**
 * Implements hook_mail
 */
function popup_spinner_mail($key, &$message, $params)
{
  $data = empty($params['data']) ? [] : $params['data'];

  $message['subject'] = 'Новый пользователь сыграл в рулетку';
  $message['body'][] = '' .
    '<h2>И снова здравствуйте!</h2>' .
    '<p>Новый пользователь зарегистрировался и сыграл в рулетку:</p>' .
    '<strong>Имя:</strong> ' . $data['name'] . '<br />' .
    '<strong>Телефон:</strong> ' . $data['phone'] . '<br />' .
    '<strong>Подарок:</strong> ' . $data['gift'] . '<br />';
}
